数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。

 

你可以假设数组是非空的，并且给定的数组总是存在多数元素。

 

示例 1:

输入: [1, 2, 3, 2, 2, 2, 5, 4, 2]
输出: 2
 

限制：

1 <= 数组长度 <= 50000



// 好像和位运算没关系。。
class Solution {
    public int majorityElement(int[] nums) {
        int target = 0;
        int count = 0;
        for(int num: nums) {
            if (count == 0) {
                count++;
                target = num;
            } else {
                count += (num==target)?1:(-1);
            }
        }
        return target;
    }
}