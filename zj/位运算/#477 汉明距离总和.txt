两个整数的 汉明距离 指的是这两个数字的二进制数对应位不同的数量。

计算一个数组中，任意两个数之间汉明距离的总和。

示例:

输入: 4, 14, 2

输出: 6

解释: 在二进制表示中，4表示为0100，14表示为1110，2表示为0010。（这样表示是为了体现后四位之间关系）
所以答案为：
HammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.
注意:

数组中元素的范围为从 0到 10^9。
数组的长度不超过 10^4。



// 计算每一位，数组中所有数的汉明距离总和
// 每一位的汉明距离总和为 0的数量 * 1的数量
// class Solution {
//     public int totalHammingDistance(int[] nums) {
//         int ans = 0;
//         for(int i = 0; i < 31; i++) {
//             int oddNum = 0;
//             for(int j = 0;j <nums.length; j++) {
//                 if ((nums[j] & 1) == 1) oddNum++;
//                 nums[j] >>= 1;
//             }
//             ans += oddNum * (nums.length - oddNum);
//         }
//         return ans;
//     }
// }

class Solution {
    public int totalHammingDistance(int[] nums) {
        int ans = 0;
        for(int i = 0; i < 31; i++) {
            int oddNum = 0;
            for(int j = 0;j <nums.length; j++) {
                oddNum += (nums[j] & 1);
                nums[j] >>= 1;
            }
            ans += oddNum * (nums.length - oddNum);
        }
        return ans;
    }
}