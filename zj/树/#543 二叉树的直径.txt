给定一棵二叉树，你需要计算它的直径长度。一棵二叉树的直径长度是任意两个结点路径长度中的最大值。这条路径可能穿过也可能不穿过根结点。

 

示例 :
给定二叉树

          1
         / \
        2   3
       / \     
      4   5    
返回 3, 它的长度是路径 [4,2,1,3] 或者 [5,2,1,3]。

 

注意：两结点之间的路径长度是以它们之间边的数目表示。



//  思路：递归返回左右子树高度+1，递归中判断当前节点左子树高度+右子树高度是否为最长长度
class Solution {
    public int diameter = 0;
    public int diameterOfBinaryTree(TreeNode root) {
        diameterOfBinaryTreeCore(root);
        return diameter;
    }

    public int diameterOfBinaryTreeCore(TreeNode root) {
        if (root == null) return 0;
        int leftLength = diameterOfBinaryTreeCore(root.left);
        int rightLength = diameterOfBinaryTreeCore(root.right);
        if (leftLength + rightLength > diameter) {
            diameter = leftLength + rightLength;
        }
        return (leftLength > rightLength)?(leftLength + 1):(rightLength + 1);
    }
}