给你一棵二叉树，请你返回层数最深的叶子节点的和。

 

示例：



输入：root = [1,2,3,4,5,null,6,7,null,null,null,null,8]
输出：15
 

提示：

树中节点数目在 1 到 10^4 之间。
每个节点的值在 1 到 100 之间。
通过次数7,684提交次数9,503





class Solution {
    private int level = 0;
    private int deepestLevelSum = 0;
    public int deepestLeavesSum(TreeNode root) {
		deepestLeavesSumCore(root, 1);
        return deepestLevelSum;
    }

    public void deepestLeavesSumCore(TreeNode root, int level) {
        if (root == null) return;
        if (level > this.level) {
            deepestLevelSum = root.val;
            this.level = level;
        } else if (level == this.level) {
            deepestLevelSum += root.val;
        } 
        deepestLeavesSumCore(root.left, level + 1);
        deepestLeavesSumCore(root.right, level + 1);
    }
}