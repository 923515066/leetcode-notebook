给定一个二叉树，返回其节点值自底向上的层次遍历。 （即按从叶子节点所在层到根节点所在的层，逐层从左向右遍历）

例如：
给定二叉树 [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回其自底向上的层次遍历为：

[
  [15,7],
  [9,20],
  [3]
]



class Solution {
    private int depth;
    private LinkedList<List<Integer>> ans = new LinkedList<>();
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        dfs(root, 1);
        return ans;
    }
    public void dfs(TreeNode root, int currDepth) {
        if (root == null) return;
        if (currDepth > ans.size()) {
            ans.addFirst(new LinkedList<>());
            ans.getFirst().add(root.val);
        } else ans.get(ans.size() - currDepth).add(root.val);
        dfs(root.left, currDepth+1);
        dfs(root.right, currDepth+1);
    }
}