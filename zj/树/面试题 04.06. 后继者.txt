设计一个算法，找出二叉搜索树中指定节点的“下一个”节点（也即中序后继）。

如果指定节点没有对应的“下一个”节点，则返回null。

示例 1:

输入: root = [2,1,3], p = 1

  2
 / \
1   3

输出: 2
示例 2:

输入: root = [5,3,6,2,4,null,null,1], p = 6

      5
     / \
    3   6
   / \
  2   4
 /   
1

输出: null



//  思路：中序遍历找到第一个值比p节点大的节点
class Solution {
    TreeNode next = null;
    public TreeNode inorderSuccessor(TreeNode root, TreeNode p) {
        if (root == null) return null;
        inorderSuccessorCore(root, p.val);
        return next;
    }
    public void inorderSuccessorCore(TreeNode root, int val) {
        if (root == null) return;
        inorderSuccessorCore(root.left, val);
        if (next != null) {
            return;
        }
        else if (next == null && root.val > val) {
            next = root;
            return;
        }
        inorderSuccessorCore(root.right,val);
    }
}