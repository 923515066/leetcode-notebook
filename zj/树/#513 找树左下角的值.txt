给定一个二叉树，在树的最后一行找到最左边的值。

示例 1:

输入:

    2
   / \
  1   3

输出:
1
 

示例 2:

输入:

        1
       / \
      2   3
     /   / \
    4   5   6
       /
      7

输出:
7
 

注意: 您可以假设树（即给定的根节点）不为 NULL。




class Solution {
    private int level = 0;
    private int bottomLeftValue = 0;
    public int findBottomLeftValue(TreeNode root) {
		findBottomLeftValueCore(root, 1);
        return bottomLeftValue;
    }

    public void findBottomLeftValueCore(TreeNode root, int level) {
        if (root == null) return;
        if (level > this.level) {
            this.level = level;
            bottomLeftValue = root.val;
        }
        findBottomLeftValueCore(root.left, level+1);
        findBottomLeftValueCore(root.right, level+1);
    }
}