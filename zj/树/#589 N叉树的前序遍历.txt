给定一个 N 叉树，返回其节点值的前序遍历。

例如，给定一个 3叉树 :

 



 

返回其前序遍历: [1,3,5,6,2,4]。

 

说明: 递归法很简单，你可以使用迭代法完成此题吗?



// 栈从右到左压入子节点，每次访问栈顶节点，也就是从左往右访问子树
class Solution {
    public List<Integer> preorder(Node root) {
        if (root == null) return new LinkedList<Integer>();
        Stack<Node> stack = new Stack<>();
        stack.push(root);
        List<Integer> list = new LinkedList<>();
        Node curr = null;
        while(!stack.isEmpty()) {
            curr = stack.pop();
            list.add(curr.val);
            if (curr.children == null) continue;
            for(int i = curr.children.size() -1; i >= 0; i--) {
                stack.push(curr.children.get(i));
            }
        }
        return list;
    }
}