给定一棵二叉搜索树，请找出其中第k大的节点。

 

示例 1:

输入: root = [3,1,4,null,2], k = 1
   3
  / \
 1   4
  \
   2
输出: 4
示例 2:

输入: root = [5,3,6,2,4,null,null,1], k = 3
       5
      / \
     3   6
    / \
   2   4
  /
 1
输出: 4
 

限制：

1 ≤ k ≤ 二叉搜索树元素个数



//  逆中序遍历
class Solution {
    // 记录是遇到的第几个节点
    private int num = 1;
    private int targetIndex;
    private int targetValue;
    public int kthLargest(TreeNode root, int k) {
        this.targetIndex = k;
        kthLargestCore(root);
        return targetValue;
    }

    public void kthLargestCore(TreeNode root) {
        if (root == null) return;
        kthLargestCore(root.right);
        if (num == targetIndex) targetValue = root.val;
        num++;
        kthLargestCore(root.left);
    }
}