请实现一个函数按照之字形顺序打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右到左的顺序打印，第三行再按照从左到右的顺序打印，其他行以此类推。

 

例如:
给定二叉树: [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回其层次遍历结果：

[
  [3],
  [20,9],
  [15,7]
]
 

提示：

节点总数 <= 1000



class Solution {
    private List<List<Integer>> ans = new ArrayList<>();
    public List<List<Integer>> levelOrder(TreeNode root) {
        dfs(root, 0);
        return ans;
    }

    public void dfs(TreeNode root, int level) {
        if (root == null) return;
        if (level == ans.size()) {
            ans.add(new LinkedList<>());
        }
        if (level % 2 == 0)
            ans.get(level).add(root.val);
        else
            ans.get(level).add(0,root.val);
        dfs(root.left, level+1);
        dfs(root.right, level+1);
    }
}