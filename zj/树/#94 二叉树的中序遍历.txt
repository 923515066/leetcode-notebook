给定一个二叉树，返回它的中序 遍历。

示例:

输入: [1,null,2,3]
   1
    \
     2
    /
   3

输出: [1,3,2]
进阶: 递归算法很简单，你可以通过迭代算法完成吗？



class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        if (root == null) return new LinkedList<>();
        List<Integer> ans = new LinkedList<>();
        Stack<TreeNode> stack = new Stack<>();
        TreeNode curr = root;
        TreeNode popNode = null;
        while(curr != null) {
            stack.push(curr);
            curr = curr.left;
        }
        while(!stack.isEmpty()) {
            popNode = stack.pop();
            ans.add(popNode.val);
            if (popNode.right != null) {
                curr = popNode.right;
                while(curr != null) {
                    stack.push(curr);
                    curr = curr.left;
                }
            }
        }
        return ans;
    }
}