给定一个有序整数数组，元素各不相同且按升序排列，编写一个算法，创建一棵高度最小的二叉搜索树。

示例:
给定有序数组: [-10,-3,0,5,9],

一个可能的答案是：[0,-3,9,-10,null,5]，它可以表示下面这个高度平衡二叉搜索树：

          0 
         / \ 
       -3   9 
       /   / 
     -10  5 

	 
	 
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        return sortedArrayToBSTCore(nums, 0, nums.length-1);
    }

    public TreeNode sortedArrayToBSTCore(int []nums, int left, int right) {
        if (left > right) return null;
        else if (left == right) return new TreeNode(nums[left]);
        else {
            int middle = (left + right)/2;
            TreeNode node = new TreeNode(nums[middle]);
            node.left = sortedArrayToBSTCore(nums, left, middle-1);
            node.right = sortedArrayToBSTCore(nums, middle+1, right);
            return node;
        }
    }
}