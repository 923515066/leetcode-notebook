从上到下按层打印二叉树，同一层的节点按从左到右的顺序打印，每一层打印到一行。

 

例如:
给定二叉树: [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回其层次遍历结果：

[
  [3],
  [9,20],
  [15,7]
]
 

提示：

节点总数 <= 1000





class Solution {
    private List<List<Integer>> levelList = new ArrayList<>();
    public List<List<Integer>> levelOrder(TreeNode root) {
		levelOrderCore(root, 0);
        return levelList;
    }
    public void levelOrderCore(TreeNode root, int level) {
		if (root == null) return;
        if (level >= levelList.size()) levelList.add(new ArrayList<>());
        levelList.get(level).add(root.val);
        levelOrderCore(root.left, level+1);
        levelOrderCore(root.right, level+1);
    }
}