从上到下打印出二叉树的每个节点，同一层的节点按照从左到右的顺序打印。

 

例如:
给定二叉树: [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回：

[3,9,20,15,7]
 

提示：

节点总数 <= 1000


// 层序遍历
class Solution {
    public int[] levelOrder(TreeNode root) {
        if (root == null) return new int[0];
        LinkedList<TreeNode> queue = new LinkedList<>();
        ArrayList<Integer> list = new ArrayList<>();
        TreeNode curr = root;
        TreeNode pop;
        queue.add(curr);
        while (!queue.isEmpty()) {
            pop = queue.poll();
            list.add(pop.val);
            if (pop.left != null) queue.add(pop.left);
            if (pop.right != null) queue.add(pop.right);
        }
        int ans[] = new int[list.size()];
        for (int i = 0; i < list.size(); i++)
            ans[i] = list.get(i);
        return ans;
    }
}