二叉树数据结构TreeNode可用来表示单向链表（其中left置空，right为下一个链表节点）。实现一个方法，把二叉搜索树转换为单向链表，要求值的顺序保持不变，转换操作应是原址的，也就是在原始的二叉搜索树上直接修改。

返回转换后的单向链表的头节点。

注意：本题相对原题稍作改动

 

示例：

输入： [4,2,5,1,3,null,6,0]
输出： [0,null,1,null,2,null,3,null,4,null,5,null,6]



// 思想借鉴中序遍历
// 保存头结点(树中最左的节点)
// 保存上一个节点,right指向当前节点,同时当前节点left置null
class Solution {
    private TreeNode pre = null;
    private TreeNode head = null;

    public TreeNode convertBiNode(TreeNode root) {
        if (root == null) return root;
        convertCore(root);
        return head;
    }

    public void convertCore(TreeNode root) {
        if (root.left != null) {
            convertCore(root.left);
        }
        if (pre != null) pre.right = root;
        pre = root;
        pre.left = null;
        if (head == null) head = root;
        if (root.right != null) {
            convertCore(root.right);
        }
    }
}