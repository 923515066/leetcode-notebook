递归乘法。 写一个递归函数，不使用 * 运算符， 实现两个正整数的相乘。可以使用加号、减号、位移，但要吝啬一些。

示例1:

 输入：A = 1, B = 10
 输出：10
示例2:

 输入：A = 3, B = 4
 输出：12
提示:

保证乘法范围不会溢出


// 思路：B的每一位分别乘A
class Solution {
    public int multiply(int A, int B) {
        int sum = 0;
        while (B != 0) {
			// 左移再乘2如果相等为偶数，末位为0
            if ((B >> 1) + (B >> 1) != B) {
                sum += A;
            }
            A <<= 1;
            B >>= 1;
        }
        return sum;
    }
}

// 思路相同的递归方法
class Solution {
    public int multiply(int A, int B) {
        if (B == 0) return 0;
        return (((B >> 1) + (B >> 1) != B)?A:0) + multiply(A << 1, B >> 1);
    }
}

