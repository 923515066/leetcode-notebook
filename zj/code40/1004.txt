// 1004
#include <iostream>
#include <stdio.h>
#include <cstdlib>
#include <ctime>
#include <sstream>
#include <vector>
using namespace std;
void mergeSort(vector<int>& arr, int l , int r, int level) {
    if (l == r) return;
    int mid = (l + r) >> 1;
    mergeSort(arr, l, mid, level+1);
    mergeSort(arr, mid+1, r, level +1);
    if (level < 3) return;
    
    vector<int> tempArr;
    int index1 = l, index2 = mid+1;
    while(index1 <= mid && index2  <= r) {
        if (arr[index1] <arr[index2]) {
            tempArr.push_back(arr[index1++]);
        } else {
            tempArr.push_back(arr[index2++]);
        }
    }
    while(index1 <= mid) {
        tempArr.push_back(arr[index1++]);
    }
    while(index2 <= r) {
        tempArr.push_back(arr[index2++]);
    }
    for (int i = l; i <= r; i++) {
        arr[i] = tempArr[i-l];
    }
}

int main() {
    int caseNum;
    cin >> caseNum;
    getchar();
    vector<int> arr;
    int arrLength;
    int temp;
    for(int i = 0; i < caseNum; i++) {
        cin >> arrLength;
        for(int j = 0; j < arrLength; j++) {
            cin >> temp;
            arr.push_back(temp);
        }
        mergeSort(arr, 0, arrLength-1, 1);
        for(int j = 0; j <arr.size(); j++) {
            cout<<arr[j]<<' ';
        }
        cout<<endl;
        arr.clear();
        getchar();
    }
}