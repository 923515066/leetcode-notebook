给出整数数组 A，将该数组分隔为长度最多为 K 的几个（连续）子数组。分隔完成后，每个子数组的中的值都会变为该子数组中的最大值。

返回给定数组完成分隔后的最大和。

 

示例：

输入：A = [1,15,7,9,2,5,10], K = 3
输出：84
解释：A 变为 [15,15,15,9,10,10,10]
 

提示：

1 <= K <= A.length <= 500
0 <= A[i] <= 10^6



// 这题应该是动态规划啊。。
// 这题照着题解写的，迷迷糊糊。动态规划属实杀我。。
// 数组dp[i]可以理解为从0..i的题目要求最大和
// dp[i] = Math.max(Math.max(A[j...i]) * (i - j + 1) + dp[j-1])
// 刷完图就去写动态规划
class Solution {
    public int maxSumAfterPartitioning(int[] A, int k) {
        int dp[] = new int[A.length];
        for (int i = 0; i <A.length; i++) {
            int localMax = A[i];
            for(int j = 0; j < k && i - j >= 0; j++) {
                localMax = Math.max(localMax, A[i-j]);
                dp[i] = Math.max(dp[i], ((i - j - 1) < 0?0:dp[i-j-1]) + (j+1)*localMax);
            }
        }
        return dp[A.length-1];
    }
}