将两个升序链表合并为一个新的升序链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 

示例：

输入：1->2->4, 1->3->4
输出：1->1->2->3->4->4



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        // 链表问题可以考虑创建一个preHead,可以减少对特殊情况的判断,最后返回时返回next就行
        ListNode preHead = new ListNode(0);
        ListNode curr = preHead;
        // 使用&&判断 l1或者l2剩下的直接接到新链表后
        while (l1 != null && l2 != null) {
            if (l1.val <= l2.val) {
                curr.next = l1;
                l1 =l1.next;
            } else {
                curr.next = l2;
                l2 =l2.next;
            }
            curr = curr.next;
        }
        curr.next = (l1 == null)?l2:l1;
        return preHead.next;
    }
}