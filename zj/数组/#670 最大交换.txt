给定一个非负整数，你至多可以交换一次数字中的任意两位。返回你能得到的最大值。

示例 1 :

输入: 2736
输出: 7236
解释: 交换数字2和数字7。
示例 2 :

输入: 9973
输出: 9973
解释: 不需要交换。
注意:

给定数字的范围是 [0, 108]


// 从右往左遍历，记录每个节点在当前遇见最大值的索引
// 然后从左往右遍历，第一个比当前遇见最大值小的节点与该最大值进行交换
class Solution {
    public int maximumSwap(int num) {
        if(num == 0)
            return 0;
        char[] chars = String.valueOf(num).toCharArray();
        int[] maxIndex = new int[chars.length];
        maxIndex[chars.length-1] = chars.length-1;
		for (int i = chars.length - 2; i >= 0; i--) {
            if (chars[i] - chars[maxIndex[i+1]] > 0) {
                maxIndex[i] = i;
            } else {
                maxIndex[i] = maxIndex[i+1];
            }
        }
        //正序遍历，找到第一个不是最大的数，将该位置和右边最大数换位置
        for(int i = 0;i<chars.length;i++){
            if (chars[i] < chars[maxIndex[i]]) {
                char temp = chars[i];
                chars[i] = chars[maxIndex[i]];
                chars[maxIndex[i]] = temp;
                return Integer.parseInt(new String(chars));
            }
        }
        return num;
    }
}